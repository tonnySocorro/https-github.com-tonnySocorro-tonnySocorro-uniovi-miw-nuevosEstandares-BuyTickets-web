{"ast":null,"code":"var _jsxFileName = \"/Users/tonny/my-app/src/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { Contract, ethers } from \"ethers\";\nimport myContractManifest from \"./contracts/MyContract.json\";\nimport { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [newAdminAddress, setNewAdminAddress] = useState('');\n  const [transactionResult, setTransactionResult] = useState(null);\n  const [currentAdmin, setCurrentAdmin] = useState('');\n  useEffect(() => {\n    const getCurrentAdmin = async () => {\n      const admin = await myContract.current.admin();\n      setCurrentAdmin(admin);\n    };\n    getCurrentAdmin();\n  }, []);\n  const handleAdminChange = async e => {\n    e.preventDefault();\n    try {\n      const tx = await myContract.current.changeAdmin(newAdminAddress, {\n        gasLimit: 6721975,\n        gasPrice: 20000000000\n      });\n      await tx.wait();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const myContract = useRef(null);\n  const [tikets, setTikets] = useState([]);\n  useEffect(() => {\n    initContracts();\n  }, []);\n  let initContracts = async () => {\n    var _myContract$current;\n    await configureBlockchain();\n    let tiketsFromBlockchain = await ((_myContract$current = myContract.current) === null || _myContract$current === void 0 ? void 0 : _myContract$current.getTikets());\n    if (tiketsFromBlockchain != null) setTikets(tiketsFromBlockchain);\n  };\n  let configureBlockchain = async () => {\n    try {\n      let provider = await detectEthereumProvider();\n      if (provider) {\n        await provider.request({\n          method: 'eth_requestAccounts'\n        });\n        const networkId = await provider.request({\n          method: 'net_version'\n        });\n        provider = new ethers.providers.Web3Provider(provider);\n        const signer = provider.getSigner();\n        myContract.current = new Contract(myContractManifest.networks[networkId].address, myContractManifest.abi, signer);\n      }\n    } catch (error) {}\n  };\n  let clickBuyTiket = async i => {\n    const tx = await myContract.current.buyTiket(i, {\n      value: ethers.utils.parseEther(\"0.02\"),\n      gasLimit: 6721975,\n      gasPrice: 20000000000\n    });\n    await tx.wait();\n    const tiketsUpdated = await myContract.current.getTikets();\n    setTikets(tiketsUpdated);\n  };\n  let withdrawBalance = async () => {\n    const tx = await myContract.current.transferbalanceToAdmin();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tikets store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => withdrawBalance(),\n      children: \"Withdraw Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tikets.map((address, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Tiket \", i, \" comprado por \", address, address == ethers.constants.AddressZero && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => clickBuyTiket(i),\n          children: \" buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-inline\",\n      onSubmit: handleAdminChange,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newAdminAddress,\n        onChange: e => setNewAdminAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Admin: \", currentAdmin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), transactionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert ${transactionResult.success ? \"alert-success\" : \"alert-danger\"}`,\n      children: transactionResult.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cPK/KWuDKR7rwYyd9LQRUxauCHY=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 131,\n  columnNumber: 5\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","detectEthereumProvider","Contract","ethers","myContractManifest","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","newAdminAddress","setNewAdminAddress","transactionResult","setTransactionResult","currentAdmin","setCurrentAdmin","getCurrentAdmin","admin","myContract","current","handleAdminChange","e","preventDefault","tx","changeAdmin","gasLimit","gasPrice","wait","error","console","tikets","setTikets","initContracts","_myContract$current","configureBlockchain","tiketsFromBlockchain","getTikets","provider","request","method","networkId","providers","Web3Provider","signer","getSigner","networks","address","abi","clickBuyTiket","i","buyTiket","value","utils","parseEther","tiketsUpdated","withdrawBalance","transferbalanceToAdmin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","constants","AddressZero","href","className","onSubmit","type","onChange","target","success","message","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["/Users/tonny/my-app/src/index.js"],"sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { Contract, ethers } from \"ethers\";\nimport myContractManifest from \"./contracts/MyContract.json\";\nimport { useState, useEffect, useRef } from 'react';\n\nfunction App(){\n  const [newAdminAddress, setNewAdminAddress] = useState('');\n  const [transactionResult, setTransactionResult] = useState(null);\n  const [currentAdmin, setCurrentAdmin] = useState('');\n  useEffect(() => {\n    const getCurrentAdmin = async () => {\n      const admin = await myContract.current.admin();\n      setCurrentAdmin(admin);\n    };\n\n    getCurrentAdmin();\n  }, []);\n\n  const handleAdminChange = async (e) => {\n    e.preventDefault();\n    try {\n      const tx = await myContract.current.changeAdmin(newAdminAddress, {\n        gasLimit: 6721975,\n        gasPrice: 20000000000,\n      });\n      await tx.wait();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const myContract = useRef(null);\n  const [tikets, setTikets] = useState([]);\n  useEffect( () => {\n    initContracts();\n  }, [])\n\n  let initContracts = async () => {\n    await configureBlockchain();\n    let tiketsFromBlockchain  = await myContract.current?.getTikets();\n    if (tiketsFromBlockchain != null)\n      setTikets(tiketsFromBlockchain)\n}\n\n\n  let configureBlockchain = async () => {\n    try {\n      let provider = await detectEthereumProvider();\n      if (provider) {\n        await provider.request({ method: 'eth_requestAccounts' });\n        const networkId = await provider.request({ method: 'net_version' })\n\n        provider = new ethers.providers.Web3Provider(provider);\n        const signer = provider.getSigner();\n        \n          myContract.current  = new Contract(\n          myContractManifest.networks[networkId].address,\n          myContractManifest.abi,\n          signer\n        );\n\n\n      }\n    } catch (error) { }\n  }\n  \n \nlet clickBuyTiket = async (i) => {\n  const tx = await myContract.current.buyTiket(i,  {\n      value: ethers.utils.parseEther(\"0.02\"),\n      gasLimit: 6721975,\n      gasPrice: 20000000000,\n  });\n  await tx.wait();\n\n  const tiketsUpdated = await myContract.current.getTikets();\n  setTikets(tiketsUpdated);\n}\n\nlet withdrawBalance = async () => {\n  const tx = await myContract.current.transferbalanceToAdmin(); \n}\n\n\n\n\n \n  return (\n    <div>\n        <h1>Tikets store</h1>\n        <button onClick={() => withdrawBalance()}>Withdraw Balance</button>\n        <ul>\n            { tikets.map( (address, i) =>\n                <li>Tiket { i } comprado por { address }\n                    { address == ethers.constants.AddressZero && \n                        <a href=\"#\" onClick={()=>clickBuyTiket(i)}> buy</a> }\n                </li>\n            )}\n        </ul>\n        \n        <form className=\"form-inline\" onSubmit={handleAdminChange}>\n        <input\n          type=\"text\"\n          value={newAdminAddress}\n          onChange={(e) => setNewAdminAddress(e.target.value)}\n        />\n        <button type=\"submit\">Change Admin</button>\n      </form>\n      <div>\n        <p>Current Admin: {currentAdmin}</p>\n      </div>\n      {transactionResult && (\n        <div className={`alert ${transactionResult.success ? \"alert-success\" : \"alert-danger\"}`}>\n          {transactionResult.message}\n        </div>\n)}\n    </div>\n    \n\n)\n}\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}